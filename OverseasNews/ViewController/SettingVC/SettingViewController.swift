//
//  ScrapViewController.swift
//  OverseasNews
//
//  Created by Í∞ïÌò∏ÏÑ± on 2021/11/17.
//

import UIKit
import MessageUI
import Toast

class SettingViewController: UIViewController {
    
    // MARK: - Properties
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureLeftTitle(title: "Setting")
        configureTableView()
    }
    
    // MARK: - Helper
    
    func configureTableView() {
        tableView.dataSource = self
        tableView.delegate = self
        tableView.contentInset = UIEdgeInsets(top: 20, left: 0, bottom: 50, right: 0)
    }
    
    func showToastAlert(message: String) {
        DispatchQueue.main.async {
            self.view.makeToast(message)
        }
    }
    
    func goAppStoreURL(url: String) {
        if let appstoreURL = URL(string: url) {
            var components = URLComponents(url: appstoreURL, resolvingAgainstBaseURL: false)
            components?.queryItems = [
              URLQueryItem(name: "action", value: "write-review")
            ]
            guard let writeReviewURL = components?.url else {
                return
            }
            UIApplication.shared.open(writeReviewURL, options: [:], completionHandler: nil)
        }
    }
    
    func showMailComposer() {
        guard MFMailComposeViewController.canSendMail() else {
            showToastAlert(message: "ÌîºÎìúÎ∞±ÏùÑ Î≥¥ÎÇ¥Í∏∞ Ï†ÑÏóê Î©îÏùº Îì±Î°ùÏùÑ Î®ºÏ†Ä Ìï¥Ï£ºÏÑ∏Ïöî ‚ÄºÔ∏è")
            return
        }
        
        let composer = MFMailComposeViewController()
        composer.mailComposeDelegate = self
        composer.setToRecipients(["camosss777@gmail.com"])
        present(composer, animated: true)
    }
}

// MARK: - MFMailComposeViewControllerDelegate

extension SettingViewController: MFMailComposeViewControllerDelegate {
    func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?) {
        if let _ = error {
            showToastAlert(message: "ÌîºÎìúÎ∞± Î≥¥ÎÇ¥Í∏∞Î•º Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Ï≤òÎ¶¨ÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§ üò±")
            controller.dismiss(animated: true)
        }
        
        switch result {
        case .cancelled:
            showToastAlert(message: "ÌîºÎìúÎ∞± Î≥¥ÎÇ¥Í∏∞Î•º Ï∑®ÏÜåÌïòÏòÄÏäµÎãàÎã§ ü•≤")
        case .saved:
            showToastAlert(message: "ÌîºÎìúÎ∞±ÏùÑ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Ï†ÄÏû•ÌñàÏäµÎãàÎã§ üòÑ")
        case .sent:
            showToastAlert(message: "ÌîºÎìúÎ∞±ÏùÑ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Î≥¥ÎÉàÏäµÎãàÎã§ üòÜ")
        case .failed:
            showToastAlert(message: "ÌîºÎìúÎ∞± Î≥¥ÎÇ¥Í∏∞Î•º Ïã§Ìå®ÌñàÏäµÎãàÎã§ üò≠")
        @unknown default:
            showToastAlert(message: "üò®")
        }
        
        controller.dismiss(animated: true)
    }
}

// MARK: - UITableViewDataSource, UITableViewDelegate

extension SettingViewController: UITableViewDataSource, UITableViewDelegate {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 36
    }
    
    func tableView(_ tableView: UITableView, titleForFooterInSection section: Int) -> String? {
        return "Version information 1.0.0"
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return SettingOption.allCases.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: SettingTableViewCell.identifier, for: indexPath) as! SettingTableViewCell
        
        guard let option = SettingOption(rawValue: indexPath.row) else { return cell }
        cell.titleLabel.text = option.description
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        
        let row = indexPath.row
        
        if row == 0 { // Í≥µÏßÄÏÇ¨Ìï≠
            
        } else if row == 1 { // ÌîºÎìúÎ∞± Î≥¥ÎÇ¥Í∏∞
            showMailComposer()
        } else if row == 2 { // Ïï±Ïä§ÌÜ†Ïñ¥ Ïó∞Í≤∞
            goAppStoreURL(url: "itms-apps://itunes.apple.com/app/apple-store/id1596846397")
        } else { // ÎùºÏù¥ÏÑ†Ïä§
            let sb = UIStoryboard(name: "Setting", bundle: Bundle.main)
            let vc = sb.instantiateViewController(withIdentifier: "LicenseViewController") as! LicenseViewController
            navigationController?.pushViewController(vc, animated: true)
        }
    }
}
